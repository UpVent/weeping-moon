#! /usr/bin/env bash

help() {
    cat <<__EOF__
    Module description:

    iptables is a userspace utility that allows a sysadmin to configure the
    linux kernel firewall tables and it's rules.
__EOF__
}

main() {
    read -pr "How many connection attempts should be allowed into SSH before a soft-ban?" ssh-att
    echo -e "[WARN] Setting up iptables for ssh connection limits"
    sudo iptables -I INPUT -p tcp --dport 22 -i eth0 -m state --state NEW -m recent --set
    sudo iptables -I INPUT -p tcp --dport 22 -i eth0 -m state --state NEW -m recent --update --seconds 60 --hitcount "$(ssh-att)" -j DROP

    # Drop any incoming connections making more than 3 attempts in 15 seconds or less
    sudo iptables -I INPUT -p tcp --dport ssh -i eth0 -m state --state NEW -m recent  --set
    sudo iptables -I INPUT -p tcp --dport ssh -i eth0 -m state --state NEW -m recent  --update --seconds 15 --hitcount 3 -j DROP
    echo -e "[SUCCESS] Iptables ssh connections limited correctly"

    echo -e "[WARN] Setting up port knocking rules"

    sudo iptables -N stage1
    sudo iptables -A stage1 -m recent --remove --name knock
    sudo iptables -A stage1 -p tcp --dport 3456 -m recent --set --name knock2
    sudo iptables
    sudo iptables -N stage2
    sudo iptables -A stage2 -m recent --remove --name knock2
    sudo iptables -A stage2 -p tcp --dport 2345 -m recent --set --name heaven
    sudo iptables
    sudo iptables -N door
    sudo iptables -A door -m recent --rcheck --seconds 5 --name knock2 -j stage2
    sudo iptables -A door -m recent --rcheck --seconds 5 --name knock -j stage1
    sudo iptables -A door -p tcp --dport 1234 -m recent --set --name knock
    sudo iptables
    sudo iptables -A INPUT -m --state ESTABLISHED,RELATED -j ACCEPT
    sudo iptables -A INPUT -p tcp --dport 22 -m recent --rcheck --seconds 5 --name heaven -j ACCEPT
    sudo iptables -A INPUT -p tcp --syn -j doo

    echo -e "[SUCCESS] Port knocking rules setup successfully"

    echo -e "[WARN] Blocking portscan attempts for one day"
    sudo iptables -A INPUT   -m recent --name portscan --rcheck --seconds 86400 -j DROP
    sudo iptables -A FORWARD -m recent --name portscan --rcheck --seconds 86400 -j DROP

    sudo iptables -A INPUT   -m recent --name portscan --remove
    sudo iptables -A FORWARD -m recent --name portscan --remove

    # Add port scanners to the log files
    sudo iptables -A INPUT   -p tcp -m tcp --dport 139 -m recent --name portscan --set -j LOG --log-prefix "Portscan:"
    sudo iptables -A INPUT   -p tcp -m tcp --dport 139 -m recent --name portscan --set -j DROP

    sudo iptables -A FORWARD -p tcp -m tcp --dport 139 -m recent --name portscan --set -j LOG --log-prefix "Portscan:"
    sudo iptables -A FORWARD -p tcp -m tcp --dport 139 -m recent --name portscan --set -j DROP
    echo -e "[SUCCESS] Port scanners blocked successfully"

    echo -e "[WARN] Forcing SYN packets check"
    sudo iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
    echo -e "[SUCCESS] All SYN packets forced to be checked"


    echo -e "[WARN] Drop all NULL packets"
    sudo iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
    echo -e "[SUCCESS] All null packets will be dropped from now on"

    read -pr "Do you wish to block ping?" ans

    if [[ ans = "Y" || ans = "y" ]]; then
        iptables -A OUTPUT -p icmp -o eth0 -j ACCEPT
        iptables -A INPUT -p icmp --icmp-type echo-reply -s 0/0 -i eth0 -j ACCEPT
        iptables -A INPUT -p icmp --icmp-type destination-unreachable -s 0/0 -i eth0 -j ACCEPT
        iptables -A INPUT -p icmp --icmp-type time-exceeded -s 0/0 -i eth0 -j ACCEPT
        iptables -A INPUT -p icmp -i eth0 -j DROP
    elif [[ ans = "N" || ans = "n" ]]; then
        echo -e "Ping will be accepted in this machine"
    fi
}

case $1 in
    help) help;;
    *) main;;
esac

# 2020 - UpVent
